defmodule MipsAssemblerTest do
  use ExUnit.Case
  doctest MipsAssembler

  import MipsAssembler, only: [assemble: 1]

  setup do
    [
      foo: File.read!("test/test_program/foo.s"),
      load_and_store: File.read!("test/test_program/load_and_store.s"),
      array: File.read!("test/test_program/array.s"),
      while: File.read!("test/test_program/while.s"),
      hanoi: File.read!("test/test_program/hanoi.s")
    ]
  end

  test "assemble", fixture do
    assert assemble(fixture.foo) === """
           00000001001010100100000000100000
           00001000000000000000000000000001
           """

    assert assemble(fixture.load_and_store) === """
           00100000000010000000000000000001
           00100000000010010000000000000010
           10101100000010000000000000000000
           10101100000010010000000000000100
           00000000000000001011100000100000
           10001110111100000000000000000000
           10001110111100010000000000000100
           00100010111010000000000000001000
           10101101000100010000000000000000
           00001000000000000000000000001001
           """

    assert assemble(fixture.array) === """
           00100000000100000000000000000010
           00000000000000001011100000100000
           00100000000010000000000000000000
           00100000000010010000000000000001
           00100000000010100000000000000010
           00100000000010110000000000000011
           00100000000011000000000000000100
           00100000000011010000000000000101
           10101110111010000000000000000000
           10101110111010010000000000000100
           10101110111010100000000000001000
           10101110111010110000000000001100
           10101110111011000000000000010000
           10101110111011010000000000010100
           00000000000100000100000010000000
           00000010111010000100000000100000
           10001101000100010000000000000000
           10001110111100100000000000010100
           00001000000000000000000000010010
           """

    assert assemble(fixture.while) === """
           00000000000000001000000000100000
           00000000000000001011100000100000
           00101010000010000000000000001010
           00010001000000000000000000000110
           00000000000100000100000010000000
           00000010111010000100000000100000
           10101101000100000000000000000000
           00100010000100000000000000000001
           00001000000000000000000000000010
           00001000000000000000000000001001
           """

    assert assemble(fixture.hanoi) === """
           00100000000111010000000000000001
           00000000000111011110101010000000
           00100000000001000000000000000101
           00100000000001010000000000000001
           00100000000001100000000000000010
           00100000000001110000000000000011
           00001100000000000000000000001000
           00001000000000000000000000000111
           00100011101111011111111111101100
           10101111101001000000000000000000
           10101111101001010000000000000100
           10101111101001100000000000001000
           10101111101001110000000000001100
           10101111101111110000000000010000
           00101000100010000000000000000010
           00010001000000000000000000000111
           00000000111000000011000000100000
           00001100000000000000000000101000
           10001111101001100000000000001000
           10001111101111110000000000010000
           00100011101111010000000000010100
           00000011111000000000000000001000
           00100000100001001111111111111111
           10001111101001100000000000001100
           10001111101001110000000000001000
           00001100000000000000000000001000
           10001111101001000000000000000000
           00001100000000000000000000101000
           00100000100001001111111111111111
           10001111101001010000000000001000
           10001111101001100000000000000100
           10001111101001110000000000001100
           00001100000000000000000000001000
           10001111101001000000000000000000
           10001111101001010000000000000100
           10001111101001100000000000001000
           10001111101001110000000000001100
           10001111101111110000000000010000
           00100011101111010000000000010100
           00000011111000000000000000001000
           00000000100000000100000000100000
           00000000101000000100100000100000
           00000000110000000101000000100000
           00000011111000000000000000001000
           """
  end
end
